@using WebView.Areas.BanHangOnline.HoangDTO.Resp
@{
    var resp = ViewData["diachigiaohang"] as List<DiaChiKhachHangResp>;
       var mess= ViewData["mess"] as string;
       var status= ViewData["status"] as bool?;
}

<style>
    .address-card {
        border: 1px solid #ddd;
        padding: 15px;
        margin-bottom: 15px;
        border-radius: 5px;
    }

    .default-address {
        color: green;
        font-weight: bold;
    }

    .btn-save {
        background-color: #dc3545;
        color: white;
        border: none;
    }

    .btn-save:hover {
        background-color: #c82333;
    }
</style>
<div>
    @if (status == true)
    {
        <div class="toast show">
            <div class="toast-header">
                Thêm địa chỉ khách hàng
                <button type="button" class="btn-close" data-bs-dismiss="toast"></button>
            </div>
            <div class="toast-body">
                @mess
            </div>
        </div>
    }
    else if(status == false)
    {
        <div class="toast show">
            <div class="toast-header">
                Thêm địa chỉ khách hàng
                <button type="button" class="btn-close" data-bs-dismiss="toast"></button>
            </div>
            <div class="toast-body">
                @mess
            </div>
        </div>
    }
    else
    {
        
    }
</div>
<div class="container mt-5">
   
    <h2>ĐỊA CHỈ GIAO HÀNG</h2>
    @if (resp != null && resp.Count > 0)
    {
        foreach (var item in resp)
        {
            <div class="address-card">
                <div class="d-flex justify-content-between">
                    <div>
                        Địa chỉ: @item.ChiTietDiaChi, @item.TenPhuong, @item.TenQuan, @item.TenTinh @if(item.IsDefault){<span class="default-address">[Mặc định]</span>}
                    </div>
                    <div>
                        <button class="btn btn-link p-0" data-bs-toggle="modal" data-bs-target="#editAddressModal-@item.Id">
                            Chỉnh sửa
                        </button> |
                        <button class="btn btn-link p-0 text-danger" onclick="ClickDelete(@item.Id)" data-bs-toggle="modal" data-bs-target="#confirmModal">Xóa</button>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div >
            <p class="text-danger">Chưa có địa chỉ giao hàng. Xin hãy thêm mời 1 địa chỉ</p>
        </div>
    }

    <!-- Button to Add New Address -->
    <button class="btn btn-outline-danger w-100" data-bs-toggle="modal" data-bs-target="#addAddressModal">
        THÊM ĐỊA CHỈ MỚI
    </button>
</div>
@if (resp != null && resp.Count > 0)
{
    foreach (var item in resp)
    {
        <!-- Edit Address Modal (Image 2) -->
        <div class="modal fade modal-lg" id="editAddressModal-@item.Id" tabindex="-1" aria-labelledby="editAddressModalLabel-@item.Id"
        aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editAddressModalLabel">ĐỊA CHỈ GIAO HÀNG</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form>
                            <div class="row mb-3">
                                <div class="col">
                                    <label for="editProvince-@item.Id" class="form-label">
                                        TỈNH / THÀNH PHỐ <span class="text-danger">*</span>
                                    </label>
                                    <select class="form-select" id="editProvince-@item.Id" onchange="LoadDistricts(@item.Id)" onclick="LoadProvinces(@item.Id)" required>
                                        <option value="@item.IdTinh" selected>@item.TenTinh</option>
                                    </select>
                                </div>
                                <div class="col">
                                    <label for="editDistrict-@item.Id" class="form-label">
                                        QUẬN / HUYỆN <span class="text-danger">*</span>
                                    </label>
                                    <select class="form-select" id="editDistrict-@item.Id" onclick="LoadDistricts(@item.Id)"  onchange="LoadWards(@item.Id)" required>
                                        <option value="@item.IdQuan" selected>@item.TenQuan</option>
                                    </select>
                                </div>
                                <div class="col">
                                    <label for="editWard-@item.Id" class="form-label">PHƯỜNG / XÃ<span class="text-danger">*</span></label>
                                    <select class="form-select" id="editWard-@item.Id" required>
                                        <option value="@item.IdPhuong"  selected>@item.TenPhuong</option>
                                    </select>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="editAddress-@item.Id" class="form-label">
                                    ĐỊA CHỈ <span class="text-danger">*</span>
                                </label>
                                <input type="text" class="form-control" id="editAddress-@item.Id" value="@item.ChiTietDiaChi" required>
                            </div>
                            <div class="form-check mb-3">
                               @if (item.IsDefault)
                                {
                                    <input class="form-check-input" type="checkbox" id="editDefaultAddress-@item.Id" checked>
                                }
                                else
                                {
                                
                                    <input class="form-check-input" type="checkbox" id="editDefaultAddress-@item.Id">
                                }
                                <label class="form-check-label" for="editDefaultAddress-@item.Id">
                                    Đặt làm địa chỉ mặc định
                                </label>
                            </div>
                            <button type="submit" class="btn btn-save w-100" onclick="PostDiaChiKhachHang(@item.Id.ToString())">LƯU THÔNG TIN</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
}
<!-- Add Address Modal (Image 3) -->
<div class="modal fade modal-lg" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel"
     aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addAddressModalLabel">ĐỊA CHỈ GIAO HÀNG</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="row mb-3">
                        <div class="col">
                            <label for="addProvince" class="form-label">
                                TỈNH / THÀNH PHỐ <span class="text-danger">*</span>
                            </label>
                            <select class="form-select" id="addProvince" required>
                                <option selected disabled>Chọn tỉnh / thành phố</option>
                            </select>
                        </div>
                        <div class="col">
                            <label for="addDistrict" class="form-label">
                                QUẬN / HUYỆN <span class="text-danger">*</span>
                            </label>
                            <select class="form-select" id="addDistrict" required>
                                <option selected disabled>Chọn quận huyện</option>
                            </select>
                        </div>
                        <div class="col">
                            <label for="addWard" class="form-label">PHƯỜNG / XÃ</label>
                            <select class="form-select" id="addWard">
                                <option selected disabled>Chọn phường xã</option>
                            </select>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="addAddress" class="form-label">
                            ĐỊA CHỈ <span class="text-danger">*</span>
                        </label>
                        <input type="text" class="form-control" id="addAddress" placeholder="Nhập địa chỉ của bạn"
                               required>
                    </div>
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="addDefaultAddress">
                        <label class="form-check-label" for="addDefaultAddress">
                            Đặt làm địa chỉ mặc định
                        </label>
                    </div>
                    <button type="submit" class="btn btn-save w-100" onclick="postDiaChiKhachHang()">LƯU THÔNG TIN</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmModalLabel">Xóa địa chỉ</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có muốn xóa địa chỉ này không?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Hủy bỏ</button>
                <button type="button" class="btn btn-success" onclick="DeleteDiaChi()">Xác nhận</button>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function() {
        
        const API_KEY = '3ca6ba1b-b145-11ef-8350-bab7316192b7'; // Thay bằng API key của bạn
        const BASE_URL = 'https://online-gateway.ghn.vn/shiip/public-api';

        // Hàm lấy danh sách tỉnh
        async function LoadProvinces() {
            const response = await fetch(`${BASE_URL}/master-data/province`, {
                headers: { 'Token': API_KEY }
            });
            const data = await response.json();
            data.data.forEach(province => {
                const option = document.createElement('option');
                option.value = province.ProvinceID;
                option.textContent = province.ProvinceName;
                $('#addProvince').append(option);
            });
        }

        // Load districts based on province
        $('#addProvince').change( async function LoadDistricts () {
            let provinceId = document.getElementById('addProvince').value;
            if (provinceId) {
                const response = await fetch(`${BASE_URL}/master-data/district`, {
                    headers: { 'Content-Type': 'application/json', 'Token': API_KEY },
                    method: 'POST',
                    body: JSON.stringify({ province_id: parseInt(provinceId) })
                });
                const districts = await response.json();

                $('#addDistrict').empty();
                $('#addDistrict').append('<option value="">Chọn quận/huyện</option>');
                $('#addWard').empty();
                $('#addWard').append('<option value="">Chọn phường/xã</option>');
                $('#addWard').disabled = true;
                districts.data.forEach(district => {
                    const option = document.createElement('option');
                    option.value = district.DistrictID;
                    option.textContent = district.DistrictName;
                    $('#addDistrict').append(option);
                });

            } else {
                $('#addDistrict').empty().append('<option value="">Chọn quận/huyện</option>');
                $('#addWard').empty().append('<option value="">Chọn phường/xã</option>');
            }
        });

        // Load wards based on district
        $('#addDistrict').change(async function () {
            let districtId = document.getElementById('addDistrict').value;
            if (districtId) {
                const response = await fetch(`${BASE_URL}/master-data/ward`, {
                    headers: { 'Content-Type': 'application/json', 'Token': API_KEY },
                    method: 'POST',
                    body: JSON.stringify({ district_id: parseInt(districtId) })
                });
                const wards = await response.json();

                $('#addWard').empty();
                $('#addWard').append('<option value="">Chọn phường/xã</option>');

                wards.data.forEach(ward => {
                    const option = document.createElement('option');
                    option.value = ward.WardCode;
                    option.textContent = ward.WardName;
                    $('#addWard').append(option);
                });

            } else {
                $('#addWard').empty().append('<option value="">Chọn phường/xã</option>');
            }
        });

        // Load initial provinces when page loads
        LoadProvinces();

      
    });
</script>

<script>
    // Example usage:
    
    async function postDiaChiKhachHang() {
        let tinh = document.getElementById('addProvince').selectedOptions[0];
        let quan = document.getElementById('addDistrict').selectedOptions[0];
        let phuong = document.getElementById('addWard').selectedOptions[0];
        let chitiet = document.getElementById('addAddress').value;
        let isDef = document.getElementById('addDefaultAddress').checked;

        const diaChi = {
            idTinh: tinh.value,
            tenTinh: tinh.innerText,
            idQuan: quan.value,
            tenQuan: quan.innerText,
            idPhuong: phuong.value,
            tenPhuong: phuong.innerText,
            chiTietDiaChi: chitiet,
            isDefault: isDef
        };
        try {
            const response = await fetch("https://localhost:7043/BanHangOnline/DangNhapdangky/DiaChiKhachHang", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(diaChi)
            });
            location.reload(true);
        } catch (error) {
            console.error("Error posting address:", error);
            throw error;
        }
    }

</script>
<script>

    const API_KEY = '3ca6ba1b-b145-11ef-8350-bab7316192b7'; // Thay bằng API key của bạn
    const BASE_URL = 'https://online-gateway.ghn.vn/shiip/public-api';
    let provincesIdBanDau = '';
    let provincesNameBanDau = '';
    let districtsIdBanDau = '';
    let districtsNameBanDau = '';
    let wardsIdBanDau = '';
    let wardsNameBanDau = '';
    // chỉnh sửa địa chỉ
    // Hàm lấy danh sách tỉnh

    async function LoadProvinces(id) {
        provincesIdBanDau = document.getElementById(`editProvince-${id}`).value;
        provincesNameBanDau = document.getElementById(`editProvince-${id}`).selectedOptions[0].innerText;

        const response = await fetch(`${BASE_URL}/master-data/province`, {
            headers: { 'Token': API_KEY }
        });
        const data = await response.json();

        $(`#editProvince-${id}`).empty();
        $(`#editProvince-${id}`).append('<option value="">Chọn tỉnh/thành phố</option>');

        data.data.forEach(province => {
            const option = document.createElement('option');
            option.value = province.ProvinceID;
            option.textContent = province.ProvinceName;
            if (province.ProvinceID == provincesIdBanDau) {
                option.selected = true;
            }
            $(`#editProvince-${id}`).append(option);
        });
    }
    
    //
    async function LoadDistricts(id) {
        let provinceId = document.getElementById(`editProvince-${id}`).value;
        districtsIdBanDau = document.getElementById(`editDistrict-${id}`).value;
        districtsNameBanDau = document.getElementById(`editDistrict-${id}`).selectedOptions[0].innerText;
        if (provinceId) {
            const response = await fetch(`${BASE_URL}/master-data/district`, {
                headers: { 'Content-Type': 'application/json', 'Token': API_KEY },
                method: 'POST',
                body: JSON.stringify({ province_id: parseInt(provinceId) })
            });
            const districts = await response.json();

            $(`#editDistrict-${id}`).empty();
            $(`#editDistrict-${id}`).append('<option value="">Chọn quận/huyện</option>');

            districts.data.forEach(district => {
                const option = document.createElement('option');
                option.value = district.DistrictID;
                option.textContent = district.DistrictName;
                if (district.DistrictID == districtsIdBanDau) {
                    option.selected = true;
                }
                $(`#editDistrict-${id}`).append(option);
            });

        } else {
            $(`#editDistrict-${id}`).empty().append('<option value="">Chọn quận/huyện</option>');
            $(`#editWard-${id}`).empty().append('<option value="">Chọn phường/xã</option>');
        }
    }

    //
    async function LoadWards(id) {
        let districtId = document.getElementById(`editDistrict-${id}`).value;
        wardsIdBanDau = document.getElementById(`editWard-${id}`).value;
        wardsNameBanDau = document.getElementById(`editWard-${id}`).selectedOptions[0].innerText;
        if (districtId) {
            const response = await fetch(`${BASE_URL}/master-data/ward`, {
                headers: { 'Content-Type': 'application/json', 'Token': API_KEY },
                method: 'POST',
                body: JSON.stringify({ district_id: parseInt(districtId) })
            });
            const wards = await response.json();

            $(`#editWard-${id}`).empty();
            $(`#editWard-${id}`).append('<option value="">Chọn phường/xã</option>');

            wards.data.forEach(ward => {
                const option = document.createElement('option');
                option.value = ward.WardCode;
                option.textContent = ward.WardName;
                if (ward.WardCode == wardsIdBanDau) {
                    option.selected = true;
                }
                $(`#editWard-${id}`).append(option);
            });

        } else {
            $(`#editWard-${id}`).empty().append('<option value="">Chọn phường/xã</option>');
        }
    }

    // 
    async function PostDiaChiKhachHang(id) {
        let tinh = document.getElementById(`editProvince-${id}`).selectedOptions[0];
        let quan = document.getElementById(`editDistrict-${id}`).selectedOptions[0];
        let phuong = document.getElementById(`editWard-${id}`).selectedOptions[0];
        let chitiet = document.getElementById(`editAddress-${id}`).value;
        let isDef = document.getElementById(`editDefaultAddress-${id}`).checked;

        const diaChi = {
            id: id+'',
            idTinh: tinh.value+'',
            tenTinh: tinh.innerText,
            idQuan: quan.value+'',
            tenQuan: quan.innerText,
            idPhuong: phuong.value+'',
            tenPhuong: phuong.innerText,
            chiTietDiaChi: chitiet+'',
            isDefault: isDef
        };
        try {
            const response = await fetch("https://localhost:7043/BanHangOnline/DangNhapdangky/ChinhSuaDiaChi", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(diaChi)
            });
            location.reload(true);
        } catch (error) {
            console.error("Error posting address:", error);
            throw error;
        }
    }
    
    let idXoa = 0;
    function ClickDelete(id){
         idXoa = Number.parseInt(id);
    }
    
    async function DeleteDiaChi(){
        let iddiachi = Number.parseInt(idXoa);
        try {
            const response = await fetch(`https://localhost:7043/BanHangOnline/DangNhapdangky/XoaDiaChi?id=${iddiachi}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json",
                },
            });
            var data = await response.json();
            location.reload(true);
        } catch (error) {
            console.error("Error delete address:", error);
            throw error;
        }
    }
    function BlurProvinces(id) {
        const option = document.createElement('option');
        option.value = provincesIdBanDau;
        option.textContent = provincesNameBanDau;
        option.selected = true;
        $(`#editProvince-${id}`).empty();
        $(`#editProvince-${id}`).append(option);
    }
    function BlurDistricts(id) {
        const option = document.createElement('option');
        option.value = districtsIdBanDau;
        option.textContent = districtsNameBanDau;
        option.selected = true;
        $(`#editDistrict-${id}`).empty();
        $(`#editDistrict-${id}`).append(option);
    }
    function BlurWards(id) {
        const option = document.createElement('option');
        option.value = wardsIdBanDau;
        option.textContent = wardsNameBanDau;
        option.selected = true;
        $(`#editWard-${id}`).empty();
        $(`#editWard-${id}`).append(option);
    }
</script>