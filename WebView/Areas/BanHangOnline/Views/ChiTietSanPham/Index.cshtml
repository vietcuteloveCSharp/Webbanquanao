@using WebView.Areas.BanHangOnline.HoangDTO.Resp
@{
    ViewData["Title"] = "Chi tiết sản phẩm";
    var spChiTiet = ViewData["sanphamchitiet"] as ChiTietSanPhamResp;
    decimal TinhPhanTramGiamGia(decimal? giaBanDau, decimal? giaBan)
    {
        return Math.Round((decimal)(((giaBanDau - giaBan) / giaBanDau) * 100));
    }
}
<style>
   
    .content {
        padding: 0 147px;
    }

    #toast-container {
        right: 0;
    }
    .slider-for img {
        width: 100%;
        height: auto;
    }

    .slider-nav img {
        border: 2px solid transparent;
        cursor: pointer;
        width: 60%;
    }

    .slider-nav .slick-current img {
        border-color: #007bff;
        /* Màu viền cho ảnh đang chọn */
    }

    .slider-for img {
        width: 100%;
        height: auto;
        transition: transform 0.5s ease;
        object-fit: cover;
    }

    .slider-for:hover img {
        transform: scale(1.5);
        cursor: pointer;
    }

    /*  */
    .product-card {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 16px;
        background-color: #f9f9f9;
    }


    .color-options input {
        display: none;
    }

    .color-options label {
        display: inline-block;
        width: 24px;
        height: 24px;
        border-radius: 50%;
        border: 2px solid #ccc;
        margin-right: 8px;
        cursor: pointer;
    }

    .color-options input:checked+label {
        border-color: yellow;
    }

    .color-black {
        background-color: black;
    }

    .color-purple {
        background-color: #dda0dd;
    }

    .size-options input {
        display: none;
    }

    .size-options label {
        display: inline-block;
        padding: 8px 16px;
        border: 1px solid #ccc;
        border-radius: 4px;
        cursor: pointer;
        margin-right: 8px;
        font-size: 14px;
    }

    .size-options input:checked+label {
        background-color: #007bff;
        color: white;
        border-color: #007bff;
    }

    .product-name {
        display: block;
        margin: 0 0 4px;
        font-weight: 500;
        font-size: 18px;
        line-height: 20px;
    }

    .price-box {
        flex-wrap: wrap;
        display: flex;
        align-items: center;
        width: 100%;
    }

    .normal-price {
        width: 100%;
        order: -1;
    }

    .price {
        color: #333F48;
        font-weight: 700;
        font-size: 20px;
        line-height: 30px;
        align-items: center;
        text-align: center;
    }

    .price-percent {
        color: #DA291C;
        font-weight: 400;
        font-size: 14px;
        line-height: 20px;
        order: 2;
    }

    .old-price {
        margin-right: 6px;
        font-weight: 400;
        font-size: 14px;
        line-height: 20px;
        order: 1;
        text-decoration: line-through;
    }
</style>
<div class="toast-container" id="toast-container"></div>
<div class="content mt-5">
    <!-- Slider chính -->
    <div class="row">
        @if (spChiTiet != null && spChiTiet.SanPham.Id != null)
        {
            <div class="col-7 row">
                <div class="slider-for col-9">
                    @foreach (var item in spChiTiet.SanPham.ListHinHAnh)
                    {
                      <div>
                        <img src="@item.Url" alt="@spChiTiet?.SanPham?.Ten img" class="zoom-image">
                    </div>  
                    }
                    
                </div>

                <!-- Slider điều hướng -->
                <div class="slider-nav mt-4 col-3">
                    @foreach (var item in spChiTiet.SanPham.ListHinHAnh)
                    {
                      <div>
                        <img src="@item.Url" alt="@spChiTiet?.SanPham?.Ten img">
                    </div>  
                    }
                </div>
            </div>
            <div class="col-5">
                <div class="container ">
                    <div class="product-card">
                        <input type="text" name="Id" value="@spChiTiet.SanPham.Id" Id="SanPhamChiTiet" hidden/>
                        <h1 class="mb-3 product-name">@spChiTiet?.SanPham?.Ten</h1>
                        <div class="price-box mb-3">
                            <span class="normal-price">
                                <span class="price">@spChiTiet?.SanPham?.GiaBan vnd</span>
                            </span>
                            @if (spChiTiet.SanPham.GiaBanDau != spChiTiet.SanPham.GiaBan)
                            {
                                <span class="old-price">
                                    @spChiTiet?.SanPham?.GiaBanDau vnd
                                </span>
                                <span class="price-percent">-@(TinhPhanTramGiamGia(spChiTiet?.SanPham?.GiaBanDau, spChiTiet?.SanPham?.GiaBan))%</span>
                            }
                            
                        </div>
                        <div class="mb-3">
                            <label class="form-label"><strong>Màu sắc:</strong></label>
                            <div class="color-options">
                                @if (spChiTiet.MauSacResps != null)
                                {
                                    int id = (int)spChiTiet.MauSacResps.First().Id;
                                    @foreach (var ms in spChiTiet.MauSacResps)
                                    {
                                        if (id == ms.Id)
                                        {
                                            <input type="radio" id="color-@ms.Id" name="color" value=@(ms.Id) checked>
                                            <label for="color-@ms.Id" style="background-color: @ms.MaHex.Replace(" ","")" onclick="fetchProductDetails(@ms.Id)"></label>
                                        }
                                        else
                                        {
                                            <input type="radio" id="color-@ms.Id" name="color" value=@(ms.Id)>
                                            <label for="color-@ms.Id" style="background-color: @ms.MaHex.Replace(" "," ")" onclick="fetchProductDetails(@ms.Id)"></label>
                                        }
                                    
                                    }
                                }
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label"><strong>Kích cỡ:</strong></label>
                            <div class="size-options d-flex justify-content-start flex-wrap gap-1">
                                @if (spChiTiet.KichThuocResps != null)
                                {
                                    int id = (int)spChiTiet.MauSacResps.First().Id;
                                    @foreach (var kt in spChiTiet.KichThuocResps)
                                    {
                                            if (id == kt.Id_MauSac)
                                            {
                                                <input type="radio" id="size-@kt.Id" name="size" value="@kt.Id">
                                                 <label for="size-@kt.Id">@kt.Ten</label>
                                            }
                                    }
                                }
                            </div>
                        </div>
                        <div class="d-flex gap-2">
                            <button type="button" class="btn btn-danger w-100" onclick="SubmitSp()">
                                <i class="fas fa-shopping-cart"></i> Thêm vào giỏ
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            
        <div class="col-5">
            <div class="container ">
               <h1 class="text-danger">Sản phẩm không tồn tại</h1>
            </div>
        </div>

        }
    </div>
    
</div>
<script defer>
                async function fetchProductDetails(id_mausac) {
                    try {
                        // Gửi yêu cầu GET đến API
            const response = await fetch(`https://localhost:7043/BanHangOnline/ChiTietSanPham/GetSessionSanPhamChiTiet?id=${id_mausac}`);
            
                        // Kiểm tra nếu API trả về lỗi
                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }

                        // Lấy dữ liệu JSON từ API
                        const data = await response.json();

                        // Chọn phần tử có class 'size-options'
                        const ktOptionsContainer = document.querySelector('.size-options');

                        // Xóa nội dung cũ
                        ktOptionsContainer.innerHTML = '';

                        // Lặp qua dữ liệu và tạo cấu trúc HTML
                        data.forEach(item => {
                            const inputId = `size-${item.Id}`;
                            const inputElement = `<input type="radio" id="${inputId}" name="size" value="${item.Id}">`;
                            const labelElement = `<label for="${inputId}">${item.Ten}</label>`;

                            // Thêm cấu trúc HTML vào container
                            ktOptionsContainer.innerHTML += inputElement + labelElement;
                        });
                    } catch (error) {
                        console.error('Lỗi khi gọi API:', error);
                    }
                }
                async function SubmitSp() {
                const selectedColor = document.querySelector('.color-options input[name="color"]:checked');
                const selectedSize = document.querySelector('.size-options input[name="size"]:checked');
                const idSp = document.querySelector('#SanPhamChiTiet');
                // Kiểm tra nếu chưa chọn màu sắc hoặc kích thước
                if (!selectedColor || !selectedSize) {
                    alert('Vui lòng chọn màu sắc và kích thước trước khi thêm vào giỏ hàng.');
                    return;
                }

                // Chuẩn bị model dữ liệu
                const model = {
                    IdSanPham: idSp.value,
                    IdMauSac: selectedColor.value,
                    IdKichThuoc: selectedSize.value
                };

                try {
                    // Gửi yêu cầu POST đến API
            const response = await fetch('https://localhost:7043/BanHangOnline/ChiTietSanPham/PostSanPhamVaoGioHang', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json', // Định nghĩa kiểu dữ liệu JSON
                        },
                        body: JSON.stringify(model) // Chuyển đổi model sang chuỗi JSON
                    });
                    console.log(response);
                    const result = await response.json();
                    // Kiểm tra phản hồi từ server
                    if (result.status == 200) {
                        showToast(result.message,false);
                    } else {
                        showToast(result.message,true);
                    }
                } catch (error) {
                    console.error('Lỗi khi gọi API:', error);
                    showToast('Lỗi',true);
                }
        }
        const toastContainer = document.getElementById('toast-container');
        // Hiển thị thông báo
        function showToast(message, isError = false) {
            const toast = document.createElement('div');
            toast.className = `toast align-items-center text-bg-${isError ? 'danger' : 'success'} border-0 show`;
            toast.setAttribute('role', 'alert');
            toast.innerHTML = `
                    <div class="d-flex">
                        <div class="toast-body">${message}</div>
                        <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                    `;

            toastContainer.appendChild(toast);

            setTimeout(() => {
                toast.remove();
            }, 3000);
        }
</script>

<script defer>
    document.querySelectorAll('.zoom-image').forEach(function (image) {
        image.addEventListener('mousemove', function (e) {
            const containerRect = image.getBoundingClientRect();
            const offsetX = e.clientX - containerRect.left; // Vị trí x của con trỏ
            const offsetY = e.clientY - containerRect.top;  // Vị trí y của con trỏ

            const originX = (offsetX / containerRect.width) * 100; // Tính tỷ lệ phần trăm
            const originY = (offsetY / containerRect.height) * 100; // Tính tỷ lệ phần trăm

            image.style.transformOrigin = `${originX}% ${originY}%`; // Đặt điểm gốc phóng to
            image.style.transform = 'scale(1.5)'; // Phóng to hình ảnh
        });

        // Khi rời chuột ra khỏi hình ảnh
        image.addEventListener('mouseleave', function () {
            image.style.transform = 'scale(1)'; // Quay lại kích thước ban đầu
        });
    });
</script>
<script defer>
    $(document).ready(function () {
        // Slider chính
        $('.slider-for').slick({
            slidesToShow: 1,
            slidesToScroll: 1,
            arrows: false,
            fade: true,
            asNavFor: '.slider-nav' // Liên kết với slider điều hướng
        });

        // Slider điều hướng
        $('.slider-nav').slick({
            slidesToShow: 3, // Số lượng ảnh hiển thị
            infinite: true,
            slidesToScroll: 1,
            asNavFor: '.slider-for', // Liên kết với slider chính
            dots: false, // Hiển thị dấu chấm điều hướng
            arrows: false,
            // centerMode: true, // Ảnh chính ở giữa
            vertical: true,
            focusOnSelect: true // Nhấp vào thumbnail để chuyển slide
        });
    });

</script>