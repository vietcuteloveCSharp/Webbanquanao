@model WebView.NghiaDTO.MaGiamGiaDTO

@{
    ViewData["Title"] = "Chỉnh sửa mã giảm giá";
}

<h2>@ViewData["Title"]</h2>

<form asp-action="Edit" method="post" id="editForm">
    @* Tên mã *@
    <div class="form-group">
        <label asp-for="Ten"></label>
        <input asp-for="Ten" class="form-control" />
        <span asp-validation-for="Ten" class="text-danger"></span>
    </div>

    @* Nội dung *@
    <div class="form-group">
        <label asp-for="NoiDung"></label>
        <textarea asp-for="NoiDung" class="form-control"></textarea>
        <span asp-validation-for="NoiDung" class="text-danger"></span>
    </div>

    @* Loại giảm giá *@
    <div class="form-group">
        <label asp-for="LoaiGiamGia"></label>
        <select asp-for="LoaiGiamGia" class="form-control" id="LoaiGiamGia">
            <option value="0">Coupon (Giảm theo %)</option>
            <option value="1">Voucher (Giảm cố định)</option>
        </select>
        <span asp-validation-for="LoaiGiamGia" class="text-danger"></span>
    </div>

    @* Điều kiện giảm giá *@
    <div class="form-group">
        <label asp-for="DieuKienGiamGia">Điều kiện giảm giá (Số tiền tối thiểu)</label>
        <input asp-for="DieuKienGiamGia" class="form-control typing-price" id="DieuKienGiamGia" />
        <span asp-validation-for="DieuKienGiamGia" class="text-danger"></span>
    </div>

    @* Trường dành riêng cho Coupon *@
    <div id="coupon-fields" style="@(Model.LoaiGiamGia == 0 ? "display:block" : "display:none")">
        <div class="form-group">
            <label asp-for="GiaTriGiam">Giá trị giảm (%)</label>
            <input asp-for="GiaTriGiam" class="form-control typing-price" />
            <span asp-validation-for="GiaTriGiam" class="text-danger"></span>
        </div>
    </div>

    @* Trường dành riêng cho Voucher *@
    <div id="voucher-fields" style="@(Model.LoaiGiamGia == 1 ? "display:block" : "display:none")">
        <div class="form-group">
            <label asp-for="MenhGia">Mệnh giá (VNĐ)</label>
            <input asp-for="MenhGia" class="form-control typing-price" value="@((Model.MenhGia == 0 ? "" : Model.MenhGia?.ToString("0.##")))" />
            <span asp-validation-for="MenhGia" class="text-danger"></span>
        </div>
    </div>

    @* Giá trị tối đa (Chỉ hiển thị khi chọn Coupon) *@
    <div class="form-group" id="giaTriToiDaField">
        <label asp-for="GiaTriToiDa">Giá trị tối đa (VNĐ)</label>
        <input asp-for="GiaTriToiDa" class="form-control typing-price" id="GiaTriToiDa" />
        <span asp-validation-for="GiaTriToiDa" class="text-danger"></span>
    </div>

    @* Trạng thái *@
    <div class="form-group">
        <label asp-for="TrangThai"></label>
        <select asp-for="TrangThai" class="form-control">
            <option value="0">Chưa phát hành</option>
            <option value="1">Đang phát hành</option>
            <option value="2">Kết thúc</option>
        </select>
        <span asp-validation-for="TrangThai" class="text-danger"></span>
    </div>

    @* Thời gian tạo *@
    <div class="form-group">
        <label asp-for="ThoiGianTao"></label>
        <input asp-for="ThoiGianTao" class="form-control" type="datetime-local" value="@Model.ThoiGianTao.ToString("yyyy-MM-ddTHH:mm")" readonly />
    </div>

    @* Thời gian kết thúc *@
    <div class="form-group">
        <label asp-for="ThoiGianKetThuc"></label>
        <input asp-for="ThoiGianKetThuc" class="form-control" type="datetime-local" />
        <span asp-validation-for="ThoiGianKetThuc" class="text-danger"></span>
    </div>

    @* Số lượng mã giảm giá *@
    <div class="form-group">
        <label asp-for="SoLuong">Số lượng</label>
        <input asp-for="SoLuong" class="form-control" type="number" min="1" />
        <span asp-validation-for="SoLuong" class="text-danger"></span>
    </div>

    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#confirmModal">Cập nhật</button>
    <a asp-action="Index" class="btn btn-secondary">Hủy</a>
</form>

<!-- Modal -->
<div class="modal fade" id="confirmModal" tabindex="-1" role="dialog" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmModalLabel">Xác nhận</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn cập nhật mã giảm giá này không?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" id="confirmSubmit">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const loaiGiamGia = document.getElementById("LoaiGiamGia");
            const couponFields = document.getElementById("coupon-fields");
            const voucherFields = document.getElementById("voucher-fields");
            const giaTriToiDaField = document.getElementById("giaTriToiDaField");

            // Hàm thay đổi hiển thị các trường tùy theo loại giảm giá
            function toggleFields() {
                if (loaiGiamGia.value === "0") {
                    couponFields.style.display = "block";
                    voucherFields.style.display = "none";
                    giaTriToiDaField.style.display = "block"; // Hiển thị trường Giá trị tối đa
                } else if (loaiGiamGia.value === "1") {
                    couponFields.style.display = "none";
                    voucherFields.style.display = "block";
                    giaTriToiDaField.style.display = "none"; // Ẩn trường Giá trị tối đa
                }
            }

            // Gọi hàm khi tải trang
            toggleFields();

            // Sự kiện thay đổi
            loaiGiamGia.addEventListener("change", toggleFields);

            // Lấy các input cần giới hạn
            const inputs = [
                document.getElementById("GiaTriGiam"),
                document.getElementById("DieuKienGiamGia"),
                document.getElementById("GiaTriToiDa"),
                document.getElementById("MenhGia")
            ];

            // Hàm giới hạn giá trị nhập từ bàn phím
            function enforceRange(inputElement, min, max) {
                // Ngăn không cho nhập ký tự không phải số
                inputElement.addEventListener("keypress", function (event) {
                    const charCode = event.which || event.keyCode;
                    // Chỉ cho phép nhập số (0-9)
                    if (charCode < 48 || charCode > 57) {
                        event.preventDefault();
                    }
                });

                // Ngăn không cho nhập số âm hoặc vượt quá giới hạn
                inputElement.addEventListener("input", function () {
                    let value = parseFloat(this.value);
                    if (value < min) {
                        this.value = min;
                    } else if (value > max) {
                        this.value = max;
                    }
                });

                // Đặt giá trị mặc định nếu để trống
                inputElement.addEventListener("blur", function () {
                    if (this.value === "" || parseFloat(this.value) < min) {
                        this.value = min; // Giá trị mặc định
                    }
                });
            }

            // Áp dụng giới hạn cho các input
            enforceRange(inputs[0], 1, 100);       // Giá trị giảm (%): 1-100
            enforceRange(inputs[1], 1, 20000000); // Điều kiện giảm giá (VNĐ): 1-20 triệu
            enforceRange(inputs[2], 1, 10000000); // Giá trị tối đa (VNĐ): 1-10 triệu
            enforceRange(inputs[3], 1, 20000000); // Mệnh giá (VNĐ): 1-20 triệu
        });

        // Xử lý khi nhấn "Xác nhận" trong modal
        document.getElementById("confirmSubmit").addEventListener("click", function () {
            document.getElementById("editForm").submit(); // Gửi form
        });
    </script>
}