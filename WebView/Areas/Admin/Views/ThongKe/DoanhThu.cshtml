@model WebView.NghiaDTO.DoanhThuViewModel

@{
    ViewData["Title"] = "Thống kê doanh thu";
}
<style>
    .text-center {
        text-align: center;
    }

    .text-primary {
        color: #007bff;
    }

    .text-success {
        color: #28a745;
    }

    .font-weight-bold {
        font-weight: bold;
    }

    .mb-4 {
        margin-bottom: 1.5rem;
    }

    .form-row {
        display: flex;
        gap: 10px;
        margin-bottom: 20px;
    }

        .form-row .col {
            flex: 1;
        }

    .table-responsive {
        margin-top: 20px;
    }

    .card-body h4 {
        margin-bottom: 0;
    }

    .btn-primary {
        width: 100%;
    }

    .table-container {
        margin-top: 40px;
    }

    .filter-form-container {
        margin-bottom: 30px;
    }

    .card-summary {
        margin-top: 30px;
    }

    .filter-form-container form {
        margin-bottom: 20px;
    }

    .filter-form-container label {
        font-weight: bold;
    }

    .filter-form-container .form-row {
        margin-bottom: 15px;
    }

    .form-container {
        margin-bottom: 40px;
    }
</style>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">

<div class="table-container">
    <!-- Top Sản phẩm bán chạy -->
    <div class="card">
        <div class="card-body">
            <h3 class="text-center mb-4">
                <i class="fas fa-chart-line"></i> Top 3 Sản phẩm Bán Chạy
            </h3>
            <!-- Form lọc cho Top sản phẩm bán chạy -->
            <form id="filterTopProductsForm" class="mb-4">
                <div class="form-row">
                    <div class="col">
                        <label for="startDateTopProducts">Ngày bắt đầu</label>
                        <input type="date" id="startDateTopProducts" class="form-control" />
                    </div>
                    <div class="col">
                        <label for="endDateTopProducts">Ngày kết thúc</label>
                        <input type="date" id="endDateTopProducts" class="form-control" />
                    </div>
                    <div class="col">
                        <label for="dayRangeTopProducts">Lọc theo số ngày</label>
                        <select id="dayRangeTopProducts" class="form-control">
                            <option value="">Không chọn</option>
                            <option value="3">3 ngày trước</option>
                            <option value="7">7 ngày trước</option>
                        </select>
                    </div>
                </div>

                <!-- Nút lọc và nút reset ở cùng dòng -->
                <div class="form-row mt-7">
                    <div class="col-md-2 d-flex align-items-center">
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="fas fa-filter"></i> Lọc sản phẩm
                        </button>
                    </div>
                    <div class="col d-flex align-items-center">
                        <button type="button" id="resetFilterButton" class="btn btn-secondary w-100">
                            <i class="fas fa-undo-alt"></i> Xóa bộ lọc
                        </button>
                    </div>
                </div>
            </form>

       
            <!-- Biểu đồ Top sản phẩm bán chạy -->
            <div class="chart-container mb-4">
                <canvas id="topProductsChart" width="900px" height="200px"></canvas>
            </div>
        </div>
    </div>


    <!-- Doanh thu theo hóa đơn -->
    <div class="card">
        <div class="card-body">
            <h3 class="text-center mb-4">
                <i class="fas fa-file-invoice"></i> Danh sách hóa đơn
            </h3>
<!-- Form lọc cho Doanh thu -->
<div class="filter-form-container mb-4">

                <!-- Form lọc cho Doanh thu -->
                <div class="filter-form-container mb-4">
                    <form id="filterForm">
                        <div class="form-row">
                            <div class="col">
                                <label for="startDate" class="font-weight-bold">Ngày bắt đầu</label>
                                <input type="date" id="startDate" class="form-control">
                            </div>

                            <div class="col">
                                <label for="endDate" class="font-weight-bold">Ngày kết thúc</label>
                                <input type="date" id="endDate" class="form-control">
                            </div>

                            <div class="col">
                                <label for="dayRange" class="font-weight-bold">Chọn số ngày</label>
                                <select id="dayRange" class="form-control">
                                    <option value="">Không chọn</option>
                                    <option value="3">3 ngày trước</option>
                                    <option value="7">7 ngày trước</option>
                                    <option value="30">1 tháng trước</option>
                                </select>
                            </div>
                        </div>

                        <!-- Nút lọc và nút reset ở cùng dòng -->
                        <div class="form-row mt-7">
                            <div class="col-md-2 d-flex align-items-center">
                                <button type="submit" class="btn btn-primary w-100">
                                    <i class="fas fa-filter"></i> Lọc doanh thu
                                </button>
                            </div>
                            <div class="col d-flex align-items-center">
                                <button type="button" id="resetRevenueFilterButton" class="btn btn-secondary w-100">
                                    <i class="fas fa-undo-alt"></i> Xóa bộ lọc doanh thu
                                </button>
                            </div>
                        </div>
                    </form>
                </div>

</div>


            <!-- Tổng doanh thu -->
            <div class="card card-summary">
                <div class="card-body text-center">
                    <h4 class="text-success mb-4">
                        <i class="fas fa-money-bill-wave"></i> Tổng doanh thu:
                        <span id="totalRevenue" class="font-weight-bold">
                            @Model.TotalRevenue.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))
                        </span>
                    </h4>
                </div>
            </div>
            <!-- Danh sách hóa đơn -->
            <div class="table-responsive">
                <table id="data-table" class="table table-bordered table-hover text-center">
                    <thead class="thead-dark">
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Mã hóa đơn</th>
                            <th scope="col">Thực thu</th>
                            <th scope="col">Ngày tạo</th>
                        </tr>
                    </thead>
                    <tbody id="data-body">
                        @if (Model.HoaDons.Any())
                        {
                            int index = 1;
                            foreach (var hoaDon in Model.HoaDons)
                            {
                                <tr>
                                    <td>@index</td>
                                    <td>@hoaDon.Id</td>
                                    <td class="text-success font-weight-bold">
                                        @hoaDon.Total.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))
                                    </td>
                                    <td>@hoaDon.NgayTao.ToString("dd/MM/yyyy")</td>
                                </tr>
                                index++;
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="4" class="text-center text-muted">Không có dữ liệu hóa đơn.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function () {
            // Khởi tạo biến biểu đồ
            let topProductsChart;

            // Hàm khởi tạo biểu đồ sản phẩm bán chạy
            function renderTopProductsChart(data) {
                const ctx = document.getElementById('topProductsChart').getContext('2d');
                if (topProductsChart) topProductsChart.destroy(); // Xóa biểu đồ cũ nếu có
                topProductsChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: data.labels,
                        datasets: [{
                            label: 'Số lượng bán',
                            data: data.quantities,
                            backgroundColor: 'rgba(54, 162, 235, 0.6)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: { display: false },
                            tooltip: { enabled: true }
                        },
                        scales: {
                            x: {
                                title: { display: true, text: 'Sản phẩm' }
                            },
                            y: {
                                title: { display: true, text: 'Số lượng bán' },
                                beginAtZero: true,
                                ticks: {
                                    stepSize: 1,
                                    min: 1
                                }
                            }
                        }
                    }
                });
            }

            // Hàm tải dữ liệu biểu đồ
            function loadChartData(startDate, endDate) {
                $.getJSON('/Admin/ThongKe/ThongKeSanPhamBanChay', { startDate, endDate }, function (data) {
                    const chartData = {
                        labels: data.sanPhamBanChay.map(item => item.tenSanPham),
                        quantities: data.sanPhamBanChay.map(item => item.tongSoLuong)
                    };
                    renderTopProductsChart(chartData); // Gọi hàm hiển thị biểu đồ sản phẩm bán chạy
                });
            }

            // Xử lý sự kiện khi form lọc được submit
            $('#filterTopProductsForm').submit(function (e) {
                e.preventDefault();

                var startDate = $('#startDateTopProducts').val();
                var endDate = $('#endDateTopProducts').val();
                var dayRange = $('#dayRangeTopProducts').val();

                if (dayRange) {
                    var today = new Date();
                    endDate = today.toISOString().split('T')[0];
                    var start = new Date();
                    start.setDate(today.getDate() - parseInt(dayRange));
                    startDate = start.toISOString().split('T')[0];
                }

                $.getJSON('/Admin/ThongKe/ThongKeSanPhamBanChay', { startDate, endDate }, function (data) {
                    const chartData = {
                        labels: data.sanPhamBanChay.map(item => item.tenSanPham),
                        quantities: data.sanPhamBanChay.map(item => item.tongSoLuong)
                    };
                    renderTopProductsChart(chartData);
                }).fail(function () {
                    alert('Lỗi khi tải dữ liệu sản phẩm bán chạy.');
                });
            });

            // Xử lý sự kiện khi nhấn nút "Xóa bộ lọc"
            $('#resetFilterButton').click(function () {
                // Reset các trường lọc
                $('#startDateTopProducts').val('');
                $('#endDateTopProducts').val('');
                $('#dayRangeTopProducts').val('');

                // Tải lại biểu đồ với dữ liệu mặc định (không lọc)
                loadChartData();
            });
            $('#resetRevenueFilterButton').click(function () {
                $('#startDate').val('');
                $('#endDate').val('');
                $('#dayRange').val('');
                loadRevenueData('');
            });

            function loadRevenueData(startDate, endDate) {
                $.getJSON('/Admin/ThongKe/ThongKeDoanhThu', { startDate, endDate }, function (data) {
                    $('#totalRevenue').text(data.totalRevenue.toString());
                });
            }
            // Tải dữ liệu biểu đồ ban đầu
            loadChartData();
        });

    </script>
    <script>
        $('#filterForm').submit(function (e) {
            e.preventDefault();

            var startDate = $('#startDate').val();
            var endDate = $('#endDate').val();
            var dayRange = $('#dayRange').val();

            // Kiểm tra ngày bắt đầu và ngày kết thúc
            if (startDate && endDate && new Date(startDate) > new Date(endDate)) {
                alert('Ngày bắt đầu không thể lớn hơn ngày kết thúc!');
                return;
            }

            // Nếu chọn số ngày, tính toán ngày bắt đầu và ngày kết thúc
            if (dayRange) {
                var today = new Date();
                endDate = today.toISOString().split('T')[0]; // Ngày hiện tại
                var start = new Date();
                start.setDate(today.getDate() - parseInt(dayRange)); // Lùi lại số ngày
                start.setHours(0, 0, 0, 0); // Đảm bảo là bắt đầu từ đầu ngày
                startDate = start.toISOString().split('T')[0];
            }

            // Nếu ngày bắt đầu trùng ngày kết thúc, ta chỉ lọc trong ngày đó
            if (startDate === endDate) {
                endDate = startDate; // Đảm bảo không có khoảng cách giữa ngày bắt đầu và kết thúc
            }

            // Gửi yêu cầu và xử lý dữ liệu
            $.getJSON('/Admin/ThongKe/ThongKeDoanhThuTheoNgay', { startDate: startDate, endDate: endDate }, function (data) {
                var tbody = $('#data-body');
                tbody.empty(); // Xóa dữ liệu cũ

                // Kiểm tra nếu có dữ liệu hóa đơn
                if (data.hoaDons.length > 0) {
                    var index = 1;
                    var totalRevenue = 0;

                    data.hoaDons.forEach(function (item) {
                        totalRevenue += item.total; // Cộng dồn doanh thu của các hóa đơn

                        // Thêm các dòng dữ liệu vào bảng
                        var row = `<tr>
                                    <td>${index}</td>
                                    <td>${item.id}</td>
                                    <td class="text-success font-weight-bold">${item.total.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })}</td>
                                    <td>${new Date(item.ngayTao).toLocaleDateString('vi-VN')}</td>
                                </tr>`;
                        tbody.append(row);
                        index++;
                    });

                    // Cập nhật tổng doanh thu
                    $('#totalRevenue').text(totalRevenue.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }));
                } else {
                    // Nếu không có dữ liệu, đặt tổng doanh thu là 0 VND
                    $('#totalRevenue').text('0 VND');
                }

                // Làm mới lại bảng DataTable sau khi lọc
                table.clear(); // Xóa dữ liệu cũ trong DataTable
                table.rows.add(tbody.children()); // Thêm các dòng mới vào DataTable
                table.draw(); // Vẽ lại bảng với dữ liệu đã cập nhật
            }).fail(function () {
                alert('Lỗi khi tải dữ liệu doanh thu.');
            });
        });


    </script>
    <script>
        $(document).ready(function () {
            // Lấy dữ liệu sản phẩm bán chạy ngay khi trang được tải
            $.getJSON('/Admin/ThongKe/ThongKeSanPhamBanChay', function (data) {
                var tbody = $('#sanpham-body');
                tbody.empty(); // Xóa dữ liệu cũ

                if (data.sanPhamBanChay.length > 0) {
                    var index = 1;
                    data.sanPhamBanChay.forEach(function (item) {
                        var row = `<tr>
                                    <td>${index}</td>
                                    <td>${item.sanPhamId}</td>
                                    <td>${item.tenSanPham}</td>
                                    <td class="text-success font-weight-bold">${item.tongSoLuong}</td>
                                </tr>`;
                        tbody.append(row);
                        index++;
                    });
                } else {
                    tbody.append('<tr><td colspan="4" class="text-center text-muted">Không có dữ liệu sản phẩm.</td></tr>');
                }
            }).fail(function () {
                alert('Lỗi khi tải dữ liệu sản phẩm bán chạy.');
            });
        });
    </script>
    <script>
        var table;

        $(document).ready(function () {
            table = $('#data-table').DataTable({
                dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: 'Xuất Excel',
                        className: 'btn btn-success',
                        exportOptions: {
                            modifier: {
                                page: 'current', // Chỉ xuất dữ liệu trên trang hiện tại (đã được lọc)
                                search: 'current' // Chỉ xuất dữ liệu đã lọc (nếu có)
                            },
                            // Chỉ xuất các cột đã hiển thị (nếu có)
                            columns: ':visible'
                        }
                    }
                ],
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.11.5/i18n/Vietnamese.json'
                },
                processing: true,
                serverSide: false
            });
        });

    </script>

}
