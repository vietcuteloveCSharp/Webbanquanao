
@model WebView.NghiaDTO.SanPhamDTO
@{
    ViewData["Title"] = "Thêm Sản Phẩm Mới";
}

<h1>@ViewData["Title"]</h1>

<form asp-action="Create" method="post" enctype="multipart/form-data">
    <div class="form-group">
        <label for="Ten">Tên Sản Phẩm</label>
        <input type="text" class="form-control" id="Ten" name="Ten" value="@Model.Ten" required />
        <span asp-validation-for="Ten" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="Gia">Giá</label>
        <input class="form-control typing-price" id="Gia" name="Gia" value="@Model.Gia" value="1" required />
        <span asp-validation-for="Gia" class="text-danger"></span>
    </div>
    <div id="price-convert"></div>

    <div class="form-group">
        <label for="Id_ThuongHieu">Thương Hiệu</label>
        <select class="form-control" id="Id_ThuongHieu" name="Id_ThuongHieu">
            @foreach (var item in ViewBag.ThuongHieus as SelectList)
            {
                <option value="@item.Value">@item.Text</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="Id_DanhMuc">Danh Mục</label>
        <select class="form-control" id="Id_DanhMuc" name="Id_DanhMuc">
            @foreach (var item in ViewBag.DanhMucs as SelectList)
            {
                <option value="@item.Value">@item.Text</option>
            }
        </select>
    </div>

    <div id="chiTietSanPhamContainer">
        <div class="chiTietSanPham-item" id="chiTietSanPham-template" style="display: none;">
            <div class="form-group">
                <label for="Id_MauSac">Màu Sắc</label>
                <select class="form-control" name="chiTietSanPhams[INDEX].Id_MauSac">
                    @foreach (var item in ViewBag.MauSacs as SelectList)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="Id_KichThuoc">Kích Thước</label>
                <select class="form-control" name="chiTietSanPhams[INDEX].Id_KichThuoc">
                    @foreach (var item in ViewBag.KichThuocs as SelectList)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label for="SoLuong">Số Lượng</label>
                <input type="number" class="form-control" name="chiTietSanPhams[INDEX].SoLuong" value="1" />
            </div>

            <button type="button" class="btn btn-danger remove-item">Xóa</button>
        </div>
    </div>

    <button type="button" id="addChiTiet" class="btn btn-secondary">Thêm Màu & Kích Thước</button>
    <div class="form-group">
        <label for="ImageUrls">Link Ảnh</label>
        <div id="imageUrlsContainer">
            @if (ViewBag.ImageUrls != null)
            {
                foreach (var url in ViewBag.ImageUrls as List<string>)
                {
                    <div class="image-url-item">
                        <input type="text" class="form-control mb-2" name="ImageUrls" value="@url" placeholder="Nhập link ảnh từ mạng" />
                        <div class="invalid-feedback text-danger">
                            Link ảnh không hợp lệ. Vui lòng nhập URL hợp lệ (png, jpg, jpeg, gif, webp, svg).
                        </div>

                    </div>
                }
            }
            else
            {
                <div class="image-url-item">
                    <input type="text" class="form-control mb-2" name="ImageUrls" placeholder="Nhập link ảnh từ mạng" />
                </div>
            }
        </div>

        <button type="button" id="addImageUrl" class="btn btn-secondary">Thêm Link Ảnh</button>

    </div>


    <button type="submit" class="btn btn-primary">Thêm Sản Phẩm</button>
</form>

<a href="@Url.Action("Index")" class="btn btn-secondary">Quay lại</a>
@section Scripts{
 @*    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    } *@
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Thêm input mới cho link ảnh
            document.getElementById("addImageUrl").addEventListener("click", function () {
                const container = document.getElementById("imageUrlsContainer");
                const newInput = document.createElement("div");
                newInput.className = "image-url-item";
                newInput.innerHTML = `
                            <input type="text" class="form-control mb-2" name="ImageUrls" placeholder="Nhập link ảnh từ mạng" />
                            <button type="button" class="btn btn-danger btn-sm remove-image-url">Xóa</button>`;
                container.appendChild(newInput);
            });

            // Xóa input link ảnh
            document.getElementById("imageUrlsContainer").addEventListener("click", function (e) {
                if (e.target.classList.contains("remove-image-url")) {
                    e.target.closest(".image-url-item").remove();
                }
            });

            // Validate các link ảnh trước khi submit form
            document.querySelector("form").addEventListener("submit", function (e) {
                const imageInputs = document.querySelectorAll('input[name="ImageUrls"]');
                const urlPattern = /^(https?:\/\/.*\.(?:png|jpg|jpeg|gif|webp|svg))$/i;
                let isValid = true;
                const seenUrls = new Set(); // Dùng Set để kiểm tra trùng lặp

                imageInputs.forEach(input => {
                    const value = input.value.trim();
                    const errorDiv = input.nextElementSibling;

                    // Xóa class is-invalid nếu URL hợp lệ
                    input.classList.remove("is-invalid");

                    // Kiểm tra nếu URL đã tồn tại trong Set
                    if (value && seenUrls.has(value)) {
                        isValid = false;
                        input.classList.add("is-invalid");
                        if (!errorDiv || !errorDiv.classList.contains("text-danger")) {
                            const error = document.createElement("div");
                            error.className = "invalid-feedback text-danger";
                            error.innerText = "Link ảnh bị trùng. Vui lòng nhập một URL khác.";
                            input.parentNode.appendChild(error);
                        }
                    } else if (value && !urlPattern.test(value)) {
                        isValid = false;
                        input.classList.add("is-invalid");
                        if (!errorDiv || !errorDiv.classList.contains("text-danger")) {
                            const error = document.createElement("div");
                            error.className = "invalid-feedback text-danger"; // Thêm màu đỏ
                            error.innerText = "Link ảnh không hợp lệ. Vui lòng nhập URL hợp lệ (png, jpg, jpeg, gif, webp, svg).";
                            input.parentNode.appendChild(error);
                        }
                    } else {
                        // Nếu không có lỗi, loại bỏ các thông báo lỗi
                        if (errorDiv && errorDiv.classList.contains("text-danger")) {
                            errorDiv.remove();
                        }
                    }

                    // Nếu URL hợp lệ, thêm vào Set để kiểm tra trùng
                    if (value && urlPattern.test(value)) {
                        seenUrls.add(value);
                    }
                });

                if (!isValid) {
                    e.preventDefault(); // Ngăn form submit nếu có lỗi
                }
            });
        });

    </script>




    <script>
        $(document).ready(function () {
            $(".typing-price").on("input", function () {
                var input = $(this).val().replace(/[^0-9]/g, '');
                $(this).val(input);
            });
        });

    </script>

  
    <script>
        $(".typing-price").on("input", function () {
            // Lấy giá trị từ input và bỏ tất cả ký tự không phải số
            var rawValue = $(this).val().replace(/[^0-9,]/g, '').replace(',', '.');

            // Chuyển đổi sang kiểu số
            var numberValue = parseFloat(rawValue.replace(',', '.'));

            // Nếu giá trị hợp lệ, hiển thị định dạng tiền tệ, nếu không thì hiển thị giá trị ban đầu
            if (!isNaN(numberValue)) {
                $("#price-convert").html(
                    new Intl.NumberFormat('vn-VN', { style: 'currency', currency: 'VND' }).format(numberValue)
                );
            } else {
                $("#price-convert").html('');
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            let index = 0;

            $("#addChiTiet").click(function () {
                const template = $("#chiTietSanPham-template").clone(true)
                    .removeAttr("id")
                    .css("display", "block");
                template.html(template.html().replace(/INDEX/g, index));
                $("#chiTietSanPhamContainer").append(template);
                index++;
            });

            $(document).on("click", ".remove-item", function () {
                $(this).closest(".chiTietSanPham-item").remove();
            });
        });
    </script>
}