  @model WebView.NghiaDTO.SanPhamDTO
@{
    ViewData["Title"] = "Sửa Sản Phẩm";
}

<h1>@ViewData["Title"]</h1>

<style>
    .chi-tiet-table {
        display: table;
        width: 100%;
        max-width: 600px; /* Giới hạn chiều rộng để các cột không quá xa nhau */
        border-collapse: separate;
        border-spacing: 0;
        margin-top: 15px;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        background-color: #fff;
    }

    .chi-tiet-header {
        display: table-row;
        background-color: #f1f5f9;
        color: #333;
        font-weight: 600;
        text-transform: uppercase;
        font-size: 13px;
    }

        .chi-tiet-header .header-cell {
            display: table-cell;
            padding: 10px 8px;
            border-bottom: 1px solid #e0e0e0;
            text-align: center;
        }

    .chiTietSanPham-item {
        display: table-row;
        transition: background-color 0.2s ease;
    }

        .chiTietSanPham-item .form-group {
            display: table-cell;
            padding: 8px;
            vertical-align: middle;
            border-bottom: 1px solid #e0e0e0;
            text-align: center;
        }

        /* Xen kẽ màu nền cho các hàng */
        .chiTietSanPham-item:nth-child(even) {
            background-color: #f9fafb;
        }

        /* Hiệu ứng hover */
        .chiTietSanPham-item:hover {
            background-color: #f1f5f9;
        }

        /* Điều chỉnh kích thước input/select/button */
        .chiTietSanPham-item .form-group select,
        .chiTietSanPham-item .form-group input {
            width: 100px;
            height: 36px;
            border-radius: 5px;
            border: 1px solid #ced4da;
            font-size: 14px;
            transition: border-color 0.2s ease;
        }

            .chiTietSanPham-item .form-group select:focus,
            .chiTietSanPham-item .form-group input:focus {
                border-color: #007bff;
                box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);
            }

        .chiTietSanPham-item .form-group button {
            width: 60px;
            height: 36px;
            border-radius: 5px;
            font-size: 14px;
            transition: background-color 0.2s ease;
        }

            .chiTietSanPham-item .form-group button:hover {
                background-color: #dc3545;
                filter: brightness(90%);
            }

    #addChiTietContainer {
        margin-top: 10px;
    }
</style>
<form asp-action="Edit" method="post" enctype="multipart/form-data">
    <div class="form-group">
        <label for="Ten">Tên Sản Phẩm</label>
        <input type="text" class="form-control" id="Ten" name="Ten" value="@Model.Ten" required />
        <span asp-validation-for="Ten" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="Gia">Giá</label>
        <input class="form-control typing-price"
               id="Gia"
               name="Gia"
               value="@($"{Model.Gia:#,##0}")"
                />
        <span asp-validation-for="Gia" class="text-danger"></span>
    </div>


    <div id="price-convert"></div>

    <div class="form-group">
        <label for="Id_ThuongHieu">Thương Hiệu</label>
        <select class="form-control" asp-for="Id_ThuongHieu" asp-items="ViewBag.ThuongHieus"></select>
    </div>

    <div class="form-group">
        <label for="Id_DanhMuc">Danh Mục</label>
        <select class="form-control" asp-for="Id_DanhMuc" asp-items="ViewBag.DanhMucs"></select>
    </div>

    <button type="button" class="btn btn-secondary" id="toggleChiTiet">Hiển Thị Màu & Kích Thước</button>
    <div id="chiTietSanPhamContainer" style="display: none;">
        <div class="chi-tiet-table">
            <div class="chi-tiet-header">
                <div class="header-cell">Màu Sắc</div>
                <div class="header-cell">Kích Thước</div>
                <div class="header-cell">Số Lượng</div>
                <div class="header-cell">Xóa</div>
            </div>
            @for (int i = 0; i < Model.ChiTietSanPhams.Count; i++)
            {
                <div class="chiTietSanPham-item">
                    <div class="form-group">
                        <select class="form-control chiTiet-mauSac" asp-for="ChiTietSanPhams[@i].Id_MauSac" asp-items="ViewBag.MauSacs"></select>
                    </div>
                    <div class="form-group">
                        <select class="form-control chiTiet-kichThuoc" asp-for="ChiTietSanPhams[@i].Id_KichThuoc" asp-items="ViewBag.KichThuocs"></select>
                    </div>
                    <div class="form-group">
                        <input type="number" class="form-control" name="ChiTietSanPhams[@i].SoLuong" value="@Model.ChiTietSanPhams[i].SoLuong" min="0" onkeypress="return onlyNumbers(event)" oninput="restrictInput(this)" />
                    </div>
                    <div class="form-group">
                        <button type="button" class="btn btn-danger remove-item">Xóa</button>
                    </div>
                </div>
            }
        </div>
    </div>
    <div id="addChiTietContainer" style="display: none;">
        <button type="button" id="addChiTiet" class="btn btn-secondary">Thêm Màu & Kích Thước</button>
    </div>
    <!-- Hình ảnh hiện tại -->
    <div>
        <h4>Hình ảnh hiện tại</h4>
        @if (Model.HinhAnhs != null && Model.HinhAnhs.Any())
        {
            @foreach (var hinhAnh in Model.HinhAnhs)
            {
                <div style="display: inline-block; margin-right: 10px;">
                    <img src="@hinhAnh.Url" alt="Hình ảnh sản phẩm" style="max-width: 200px; max-height: 200px;" />
                    <label>
                        <input type="checkbox" name="DeletedImageIds" value="@hinhAnh.Id" />
                        Xóa
                    </label>
                </div>
            }
        }
        else
        {
            <p>Không có hình ảnh nào.</p>
        }
    </div>

    <!-- Quản lý hình ảnh mới -->
    <div class="form-group">
        <label for="ImageUrls">Quản lý hình ảnh</label>
        <textarea id="NewImageUrls" name="NewImageUrls" class="form-control" placeholder="Nhập mỗi link ảnh trên một dòng"></textarea>
        <span class="text-danger" id="imageUrlsError"></span>
        <button type="button" class="btn btn-success" id="addMultipleImageUrls">Thêm link ảnh</button>
    </div>
    <div id="newImageLinksContainer" style="margin-top: 10px;">
        <ul id="newImageLinksList"></ul>
    </div>

    <!-- Nút Confirm và Lưu -->
    <button type="button" class="btn btn-primary" id="confirmButton">Xác Nhận</button>
    <button type="submit" class="btn btn-primary" id="submitButton" style="display: none;">Lưu</button>
    <a href="@Url.Action("Index")" class="btn btn-secondary">Quay lại</a>
</form>
<!-- Modal xác nhận -->
<div class="modal fade" id="confirmModal" tabindex="-1" role="dialog" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmModalLabel">Xác Nhận Thay Đổi</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn lưu các thay đổi này không?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" id="confirmSubmit">Đồng Ý</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
   @*  @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    } *@
    <script>
        function onlyNumbers(event) {
            // Chỉ cho phép các phím số (0-9)
            return (event.charCode >= 48 && event.charCode <= 57);
        }

        function restrictInput(element) {
            // Loại bỏ mọi ký tự không phải số
            element.value = element.value.replace(/[^0-9]/g, '');
            // Đảm bảo giá trị không nhỏ hơn 0, mặc định là 1 nếu không hợp lệ
            if (element.value === '' || parseInt(element.value) < 0) {
                element.value = '1';
            }
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Lấy danh sách URL hình ảnh hiện tại
            const existingImages = Array.from(
                document.querySelectorAll('img[src]')
            ).map(img => img.src.trim());

            // Thêm nhiều URL hình ảnh
            document.getElementById('addMultipleImageUrls').addEventListener('click', function () {
                const textarea = document.getElementById('NewImageUrls');
                const links = textarea.value.split('\n').map(link => link.trim()).filter(link => link !== '');
                const container = document.getElementById('newImageLinksList');
                const urlPattern = /^(https?:\/\/.*\.(?:png|jpg|jpeg|gif|webp|svg))$/i;

                links.forEach(link => {
                    // Kiểm tra trùng lặp
                    const isDuplicate =
                        existingImages.includes(link) ||
                        Array.from(container.querySelectorAll('input[name="ImageUrls"]')).some(input => input.value === link);

                    if (isDuplicate) {
                        // Hiển thị lỗi cho link trùng lặp
                        const error = document.getElementById('imageUrlsError');
                        error.textContent = 'Hình ảnh đã tồn tại. Vui lòng nhập URL khác.';
                    } else if (!urlPattern.test(link)) {
                        // Hiển thị lỗi cho link không hợp lệ
                        const li = document.createElement('li');
                        li.innerHTML = `<div>
                                <input type="text" class="form-control is-invalid" name="ImageUrls" value="${link}" />
                                <div class="invalid-feedback text-danger">Link ảnh không hợp lệ.</div>
                            </div>`;
                        container.appendChild(li);
                    } else {
                        // Thêm link hợp lệ
                        const li = document.createElement('li');
                        li.innerHTML = `<input type="text" class="form-control" name="ImageUrls" value="${link}" />`;
                        container.appendChild(li);
                        existingImages.push(link); // Cập nhật danh sách ảnh hiện tại
                    }
                });

                // Xóa nội dung textarea sau khi thêm
                textarea.value = '';
            });

            // Kiểm tra trước khi gửi form
            document.querySelector("form").addEventListener("submit", function (e) {
                const imageInputs = document.querySelectorAll('input[name="ImageUrls"]');
                let isValid = true;

                // Kiểm tra trùng lặp trong các URL mới
                const uniqueLinks = new Set();
                imageInputs.forEach(input => {
                    const value = input.value.trim();
                    if (uniqueLinks.has(value)) {
                        isValid = false;
                        input.classList.add("is-invalid");
                        input.nextElementSibling?.remove();
                        const error = document.createElement("div");
                        error.className = "invalid-feedback text-danger";
                        error.innerText = "Link ảnh bị trùng lặp.";
                        input.parentNode.appendChild(error);
                    } else {
                        uniqueLinks.add(value);
                        input.classList.remove("is-invalid");
                        input.nextElementSibling?.remove();
                    }
                });

                // Ngăn form nếu có lỗi
                if (!isValid) {
                    e.preventDefault();
                }
            });
        });
    </script>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const toggleButton = document.getElementById('toggleChiTiet');
            const addButtonContainer = document.getElementById('addChiTietContainer');
            const addButton = document.getElementById('addChiTiet');
            const container = document.getElementById('chiTietSanPhamContainer');
            const confirmButton = document.getElementById('confirmButton');
            const submitButton = document.getElementById('submitButton');
            const editForm = document.getElementById('editForm');

            // Hiển thị/ẩn danh sách chi tiết sản phẩm và nút "Thêm Màu & Kích Thước"
            toggleButton.addEventListener('click', function () {
                const isHidden = container.style.display === 'none';
                container.style.display = isHidden ? 'block' : 'none';
                addButtonContainer.style.display = isHidden ? 'block' : 'none';
                this.textContent = isHidden ? 'Ẩn Màu & Kích Thước' : 'Hiển Thị Màu & Kích Thước';
            });

            // Lấy danh sách màu sắc và kích thước từ ViewBag (dạng JSON)
            const mauSacOptions = `@Html.Raw(Json.Serialize(ViewBag.MauSacs))`;
            const kichThuocOptions = `@Html.Raw(Json.Serialize(ViewBag.KichThuocs))`;
            const mauSacList = JSON.parse(mauSacOptions);
            const kichThuocList = JSON.parse(kichThuocOptions);

            // Hàm cập nhật lại chỉ số index của các mục
            function updateIndexes() {
                const items = container.querySelectorAll('.chiTietSanPham-item');
                items.forEach((item, index) => {
                    const mauSacSelect = item.querySelector('.chiTiet-mauSac');
                    const kichThuocSelect = item.querySelector('.chiTiet-kichThuoc');
                    const soLuongInput = item.querySelector('input[type="number"]');

                    mauSacSelect.name = `ChiTietSanPhams[${index}].Id_MauSac`;
                    kichThuocSelect.name = `ChiTietSanPhams[${index}].Id_KichThuoc`;
                    soLuongInput.name = `ChiTietSanPhams[${index}].SoLuong`;
                });
            }

            addButton.addEventListener('click', function () {
                const index = container.querySelectorAll('.chiTietSanPham-item').length;

                // Tạo phần tử mới
                const newItem = document.createElement('div');
                newItem.className = 'chiTietSanPham-item';
                newItem.innerHTML = `
                            <div class="form-group">
                                <select class="form-control chiTiet-mauSac" name="ChiTietSanPhams[${index}].Id_MauSac">
                                    ${mauSacList.map(item => `<option value="${item.value}">${item.text}</option>`).join('')}
                                </select>
                            </div>
                            <div class="form-group">
                                <select class="form-control chiTiet-kichThuoc" name="ChiTietSanPhams[${index}].Id_KichThuoc">
                                    ${kichThuocList.map(item => `<option value="${item.value}">${item.text}</option>`).join('')}
                                </select>
                            </div>
                            <div class="form-group">
                                <input type="number" class="form-control" name="ChiTietSanPhams[${index}].SoLuong" value="1" />
                            </div>
                            <div class="form-group">
                                <button type="button" class="btn btn-danger remove-item">Xóa</button>
                            </div>
                        `;

                // Thêm vào bảng
                container.querySelector('.chi-tiet-table').appendChild(newItem);
                updateIndexes();
            });

            // Xóa chi tiết sản phẩm và cập nhật lại chỉ số
            document.addEventListener('click', function (e) {
                if (e.target && e.target.classList.contains('remove-item')) {
                    e.target.closest('.chiTietSanPham-item').remove();
                    updateIndexes();
                }
            });

            // Xử lý nút Confirm
            confirmButton.addEventListener('click', function () {
                $('#confirmModal').modal('show'); // Hiển thị modal xác nhận
            });

            // Xử lý nút Đồng Ý trong modal
            document.getElementById('confirmSubmit').addEventListener('click', function () {
                $('#confirmModal').modal('hide'); // Ẩn modal
                submitButton.click(); // Gửi form
            });
        });
    </script>


    <script>
        $(document).ready(function () {
            $(".typing-price").on("input", function () {
                var input = $(this).val().replace(/[^0-9]/g, '');
                $(this).val(input);
            });
        });
        // Hiển thị giá dạng tiền tệ
        $(".typing-price").on("input", function () {
            const value = $(this).val().replace(/[^0-9,]/g, '').replace(',', '.');
            const numberValue = parseFloat(value);
            if (!isNaN(numberValue)) {
                $("#price-convert").html(
                    new Intl.NumberFormat('vn-VN', { style: 'currency', currency: 'VND' }).format(numberValue)
                );
            } else {
                $("#price-convert").html('');
            }
        });
    </script>
 

}
