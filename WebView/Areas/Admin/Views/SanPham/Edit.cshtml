 @model WebView.NghiaDTO.SanPhamDTO
@{
    ViewData["Title"] = "Sửa Sản Phẩm";
}

<h1>@ViewData["Title"]</h1>


<form asp-action="Edit" method="post" enctype="multipart/form-data">
    <div class="form-group">
        <label for="Ten">Tên Sản Phẩm</label>
        <input type="text" class="form-control" id="Ten" name="Ten" value="@Model.Ten" required />
        <span asp-validation-for="Ten" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="Gia">Giá</label>
        <input class="form-control typing-price" id="Gia" name="Gia" value="@Model.Gia" required />
        <span asp-validation-for="Gia" class="text-danger"></span>
    </div>
    <div id="price-convert"></div>

    <div class="form-group">
        <label for="Id_ThuongHieu">Thương Hiệu</label>
        <select class="form-control" asp-for="Id_ThuongHieu" asp-items="ViewBag.ThuongHieus"></select>
    </div>

    <div class="form-group">
        <label for="Id_DanhMuc">Danh Mục</label>
        <select class="form-control" asp-for="Id_DanhMuc" asp-items="ViewBag.DanhMucs"></select>
    </div>

    <button type="button" class="btn btn-secondary" id="toggleChiTiet">Hiển Thị Màu & Kích Thước</button>
    <div id="chiTietSanPhamContainer" style="display: none;">
        @for (int i = 0; i < Model.ChiTietSanPhams.Count; i++)
        {
            <div class="chiTietSanPham-item">
                <div class="form-group">
                    <label>Màu Sắc</label>
                    <select class="form-control" asp-for="ChiTietSanPhams[@i].Id_MauSac" asp-items="ViewBag.MauSacs"></select>
                </div>
                <div class="form-group">
                    <label>Kích Thước</label>
                    <select class="form-control" asp-for="ChiTietSanPhams[@i].Id_KichThuoc" asp-items="ViewBag.KichThuocs"></select>
                </div>
                <div class="form-group">
                    <label>Số Lượng</label>
                    <input type="number" class="form-control" name="ChiTietSanPhams[@i].SoLuong" value="@Model.ChiTietSanPhams[i].SoLuong" />
                </div>
                <button type="button" class="btn btn-danger remove-item">Xóa</button>
            </div>
        }
    </div>
    <button type="button" id="addChiTiet" class="btn btn-secondary">Thêm Màu & Kích Thước</button>

    <!-- Hình ảnh hiện tại -->
    <div>
        <h4>Hình ảnh hiện tại</h4>
        @if (Model.HinhAnhs != null && Model.HinhAnhs.Any())
        {
            @foreach (var hinhAnh in Model.HinhAnhs)
            {
                <div style="display: inline-block; margin-right: 10px;">
                    <img src="@hinhAnh.Url" alt="Hình ảnh sản phẩm" style="max-width: 200px; max-height: 200px;" />
                    <label>
                        <input type="checkbox" name="DeletedImageIds" value="@hinhAnh.Id" />
                        Xóa
                    </label>
                </div>
            }
        }
        else
        {
            <p>Không có hình ảnh nào.</p>
        }
    </div>

    <!-- Quản lý hình ảnh mới -->
    <div class="form-group">
        <label for="ImageUrls">Quản lý hình ảnh</label>
        <textarea id="NewImageUrls" name="NewImageUrls" class="form-control" placeholder="Nhập mỗi link ảnh trên một dòng"></textarea>
        <span class="text-danger" id="imageUrlsError"></span>
        <button type="button" class="btn btn-success" id="addMultipleImageUrls">Thêm link ảnh</button>
    </div>
    <div id="newImageLinksContainer" style="margin-top: 10px;">
        <ul id="newImageLinksList"></ul>
    </div>


    <button type="submit" class="btn btn-primary">Lưu</button>

</form>

<a href="@Url.Action("Index")" class="btn btn-secondary">Quay lại</a>

@section Scripts {
   @*  @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    } *@
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Lấy danh sách URL hình ảnh hiện tại
            const existingImages = Array.from(
                document.querySelectorAll('img[src]')
            ).map(img => img.src.trim());

            // Thêm nhiều URL hình ảnh
            document.getElementById('addMultipleImageUrls').addEventListener('click', function () {
                const textarea = document.getElementById('NewImageUrls');
                const links = textarea.value.split('\n').map(link => link.trim()).filter(link => link !== '');
                const container = document.getElementById('newImageLinksList');
                const urlPattern = /^(https?:\/\/.*\.(?:png|jpg|jpeg|gif|webp|svg))$/i;

                links.forEach(link => {
                    // Kiểm tra trùng lặp
                    const isDuplicate =
                        existingImages.includes(link) ||
                        Array.from(container.querySelectorAll('input[name="ImageUrls"]')).some(input => input.value === link);

                    if (isDuplicate) {
                        // Hiển thị lỗi cho link trùng lặp
                        const error = document.getElementById('imageUrlsError');
                        error.textContent = 'Hình ảnh đã tồn tại. Vui lòng nhập URL khác.';
                    } else if (!urlPattern.test(link)) {
                        // Hiển thị lỗi cho link không hợp lệ
                        const li = document.createElement('li');
                        li.innerHTML = `<div>
                                <input type="text" class="form-control is-invalid" name="ImageUrls" value="${link}" />
                                <div class="invalid-feedback text-danger">Link ảnh không hợp lệ.</div>
                            </div>`;
                        container.appendChild(li);
                    } else {
                        // Thêm link hợp lệ
                        const li = document.createElement('li');
                        li.innerHTML = `<input type="text" class="form-control" name="ImageUrls" value="${link}" />`;
                        container.appendChild(li);
                        existingImages.push(link); // Cập nhật danh sách ảnh hiện tại
                    }
                });

                // Xóa nội dung textarea sau khi thêm
                textarea.value = '';
            });

            // Kiểm tra trước khi gửi form
            document.querySelector("form").addEventListener("submit", function (e) {
                const imageInputs = document.querySelectorAll('input[name="ImageUrls"]');
                let isValid = true;

                // Kiểm tra trùng lặp trong các URL mới
                const uniqueLinks = new Set();
                imageInputs.forEach(input => {
                    const value = input.value.trim();
                    if (uniqueLinks.has(value)) {
                        isValid = false;
                        input.classList.add("is-invalid");
                        input.nextElementSibling?.remove();
                        const error = document.createElement("div");
                        error.className = "invalid-feedback text-danger";
                        error.innerText = "Link ảnh bị trùng lặp.";
                        input.parentNode.appendChild(error);
                    } else {
                        uniqueLinks.add(value);
                        input.classList.remove("is-invalid");
                        input.nextElementSibling?.remove();
                    }
                });

                // Ngăn form nếu có lỗi
                if (!isValid) {
                    e.preventDefault();
                }
            });
        });
    </script>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Hiển thị/ẩn chi tiết sản phẩm
            document.getElementById('toggleChiTiet').addEventListener('click', function () {
                const container = document.getElementById('chiTietSanPhamContainer');
                container.style.display = container.style.display === 'none' ? 'block' : 'none';
                this.textContent = container.style.display === 'none' ? 'Hiển Thị Màu & Kích Thước' : 'Ẩn Màu & Kích Thước';
            });

            // Thêm chi tiết sản phẩm
            document.getElementById('addChiTiet').addEventListener('click', function () {
                const container = document.getElementById('chiTietSanPhamContainer');
                const index = container.getElementsByClassName('chiTietSanPham-item').length;
                const newItem = document.createElement('div');
                newItem.className = 'chiTietSanPham-item';
                newItem.innerHTML = `
                                    <div class="form-group">
                                        <label>Màu Sắc</label>
                                        <select class="form-control" name="ChiTietSanPhams[${index}].Id_MauSac">
        @foreach (var item in ViewBag.MauSacs as SelectList)
        {
                                                    <option value="@item.Value">@item.Text</option>
        }
                                        </select>
                                    </div>
                                    <div class="form-group">
                                        <label>Kích Thước</label>
                                        <select class="form-control" name="ChiTietSanPhams[${index}].Id_KichThuoc">
        @foreach (var item in ViewBag.KichThuocs as SelectList)
        {
                                                    <option value="@item.Value">@item.Text</option>
        }
                                        </select>
                                    </div>
                                    <div class="form-group">
                                        <label>Số Lượng</label>
                                        <input type="number" class="form-control" name="ChiTietSanPhams[${index}].SoLuong" value="0" />
                                    </div>
                                    <button type="button" class="btn btn-danger remove-item">Xóa</button>
                                `;
                container.appendChild(newItem);
            });

            // Xóa chi tiết sản phẩm
            document.addEventListener('click', function (e) {
                if (e.target && e.target.classList.contains('remove-item')) {
                    e.target.closest('.chiTietSanPham-item').remove();
                }
            });

            // // Thêm nhiều URL hình ảnh
            // document.getElementById('addMultipleImageUrls').addEventListener('click', function () {
            //     const textarea = document.getElementById('NewImageUrls');
            //     const links = textarea.value.split('\n').map(link => link.trim()).filter(link => link !== '');
            //     const container = document.getElementById('newImageLinksList');

            //     links.forEach(link => {
            //         const li = document.createElement('li');
            //         li.innerHTML = `<input type="text" class="form-control" name="ImageUrls" value="${link}" readonly />`;
            //         container.appendChild(li);
            //     });
            //     textarea.value = '';
            // });

            // Hiển thị giá dạng tiền tệ
            $(".typing-price").on("input", function () {
                const value = $(this).val().replace(/[^0-9,]/g, '').replace(',', '.');
                const numberValue = parseFloat(value);
                if (!isNaN(numberValue)) {
                    $("#price-convert").html(
                        new Intl.NumberFormat('vn-VN', { style: 'currency', currency: 'VND' }).format(numberValue)
                    );
                } else {
                    $("#price-convert").html('');
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $(".typing-price").on("input", function () {
                var input = $(this).val().replace(/[^0-9]/g, '');
                $(this).val(input);
            });
        });

    </script>
}
